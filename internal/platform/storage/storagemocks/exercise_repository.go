// Code generated by mockery v2.43.2. DO NOT EDIT.

package storagemocks

import (
	context "context"
	"github.com/wodm8/wodm8-core/internal/crossfit"

	mock "github.com/stretchr/testify/mock"
)

// ExerciseRepository is an autogenerated mock type for the ExerciseRepository type
type ExerciseRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, exercise
func (_m *ExerciseRepository) Save(ctx context.Context, exercise crossfit.Exercise) error {
	ret := _m.Called(ctx, exercise)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, crossfit.Exercise) error); ok {
		r0 = rf(ctx, exercise)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewExerciseRepository creates a new instance of ExerciseRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExerciseRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ExerciseRepository {
	mock := &ExerciseRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
