// Code generated by mockery v2.43.2. DO NOT EDIT.

package storagemocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	"github.com/wodm8/wodm8-core/internal/crossfit"
)

// WodRepository is an autogenerated mock type for the WodRepository type
type WodRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, wod
func (_m *WodRepository) Save(ctx context.Context, wod crossfit.Wod) error {
	ret := _m.Called(ctx, wod)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, crossfit.Wod) error); ok {
		r0 = rf(ctx, wod)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWodRepository creates a new instance of WodRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWodRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *WodRepository {
	mock := &WodRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
